/*
 * Copyright 2015 Andrej Halaj.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package org.perfcake.pc4nb.wizards.visuals;

import java.awt.event.ActionEvent;
import java.beans.PropertyChangeEvent;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import org.perfcake.model.Scenario.Messages;
import org.perfcake.model.Scenario.Messages.Message;
import org.perfcake.pc4nb.core.controller.MessagesController;
import org.perfcake.pc4nb.core.model.MessagesModel;
import org.perfcake.pc4nb.ui.AbstractPC4NBVisualPanel;
import org.perfcake.pc4nb.ui.actions.AddMessageAction;
import org.perfcake.pc4nb.ui.actions.EditMessageAction;

public final class MessagesVisualPanel extends AbstractPC4NBVisualPanel {

    public MessagesVisualPanel() {
        initComponents();

        addMessageButton.addActionListener(new AddMessageAction(this));
        editMessageButton.addActionListener(new EditMessageAction(this));
        deleteMessageButton.addActionListener((ActionEvent e) -> {
            int[] selectedRows = messagesTable.getSelectedRows();

            MessagesModel model = (MessagesModel) getModel();

            for (int i = selectedRows.length - 1; i >= 0; i--) {
                Message message = model.getMessages().getMessage().get(selectedRows[i]);
                model.removeMessage(message);
            }
        });
    }

    @Override
    public String getName() {
        return "Messages";
    }

    public DefaultTableModel getMessagesTableModel() {
        return messagesTableModel;
    }

    public void setMessagesTableModel(DefaultTableModel messagesTableModel) {
        this.messagesTableModel = messagesTableModel;
    }

    public JTable getMessagesTable() {
        return messagesTable;
    }

    public void setMessagesTable(JTable messagesTable) {
        this.messagesTable = messagesTable;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        messagesTable = new javax.swing.JTable();
        addMessageButton = new javax.swing.JButton();
        editMessageButton = new javax.swing.JButton();
        deleteMessageButton = new javax.swing.JButton();

        messagesTableModel = new javax.swing.table.DefaultTableModel(
            new Object [][] {},
            new String [] {
                "Message URI", "Multiplicity", "Attached validators"
            }
        );
        messagesTable.setModel(messagesTableModel);
        jScrollPane1.setViewportView(messagesTable);

        org.openide.awt.Mnemonics.setLocalizedText(addMessageButton, org.openide.util.NbBundle.getMessage(MessagesVisualPanel.class, "MessagesVisualPanel.addMessageButton.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(editMessageButton, org.openide.util.NbBundle.getMessage(MessagesVisualPanel.class, "MessagesVisualPanel.editMessageButton.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(deleteMessageButton, org.openide.util.NbBundle.getMessage(MessagesVisualPanel.class, "MessagesVisualPanel.deleteMessageButton.text")); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 537, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(addMessageButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(editMessageButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(deleteMessageButton, javax.swing.GroupLayout.DEFAULT_SIZE, 97, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 438, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(156, 156, 156)
                .addComponent(addMessageButton, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(editMessageButton, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(deleteMessageButton, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addMessageButton;
    private javax.swing.JButton deleteMessageButton;
    private javax.swing.JButton editMessageButton;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable messagesTable;
    private javax.swing.table.DefaultTableModel messagesTableModel;
    // End of variables declaration//GEN-END:variables

    @Override
    public void propertyChange(PropertyChangeEvent evt) {
        for (int i = messagesTableModel.getRowCount() - 1; i >= 0; i--) {
            messagesTableModel.removeRow(i);
        }

        MessagesModel model = (MessagesModel) getModel();
        for (Message message : model.getMessages().getMessage()) {
            messagesTableModel.addRow(new Object[]{message.getUri(), message.getMultiplicity(), "none"});
        }
    }
}
