/*
 * Copyright 2015 Andrej Halaj.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package org.perfcake.pc4nb.wizards.visuals;

import java.beans.PropertyChangeEvent;
import java.util.List;
import javax.swing.JTable;
import org.perfcake.model.Scenario;
import org.perfcake.model.Scenario.Validation.Validator;
import org.perfcake.pc4nb.core.model.ValidationModel;
import org.perfcake.pc4nb.ui3.AbstractPC4NBView;
import org.perfcake.pc4nb.ui.tableModel.ValidatorsTableModel;

public final class ValidationVisualPanel extends AbstractPC4NBView {

    /**
     * Creates new form ScenarioVisualPanel4
     */
    public ValidationVisualPanel() {
        setModel(new ValidationModel(new Scenario.Validation()));
        initComponents();
        
        /*addValidatorButton.addActionListener(new AddValidatorAction(this));
        editValidatorButton.addActionListener(new EditValidatorAction(this));
        deleteValidatorButton.addActionListener(new DeleteValidatorAction(this));*/
    }

    @Override
    public String getName() {
        return "Validation";
    }

    public JTable getValidatorsTable() {
        return validatorsTable;
    }

    public ValidatorsTableModel getValidatorsTableModel() {
        return validatorsTableModel;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        enabledLabel = new javax.swing.JLabel();
        fastForwardLabel = new javax.swing.JLabel();
        enabledCheckBox = new javax.swing.JCheckBox();
        fastForwardCheckBox = new javax.swing.JCheckBox();
        jScrollPane1 = new javax.swing.JScrollPane();
        validatorsTable = new javax.swing.JTable();
        deleteValidatorButton = new javax.swing.JButton();
        editValidatorButton = new javax.swing.JButton();
        addValidatorButton = new javax.swing.JButton();

        org.openide.awt.Mnemonics.setLocalizedText(enabledLabel, org.openide.util.NbBundle.getMessage(ValidationVisualPanel.class, "ValidationVisualPanel.enabledLabel.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(fastForwardLabel, org.openide.util.NbBundle.getMessage(ValidationVisualPanel.class, "ValidationVisualPanel.fastForwardLabel.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(enabledCheckBox, org.openide.util.NbBundle.getMessage(ValidationVisualPanel.class, "ValidationVisualPanel.enabledCheckBox.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(fastForwardCheckBox, org.openide.util.NbBundle.getMessage(ValidationVisualPanel.class, "ValidationVisualPanel.fastForwardCheckBox.text")); // NOI18N

        validatorsTableModel = new ValidatorsTableModel();
        validatorsTable.setModel(validatorsTableModel);
        jScrollPane1.setViewportView(validatorsTable);

        org.openide.awt.Mnemonics.setLocalizedText(deleteValidatorButton, org.openide.util.NbBundle.getMessage(ValidationVisualPanel.class, "ValidationVisualPanel.deleteValidatorButton.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(editValidatorButton, org.openide.util.NbBundle.getMessage(ValidationVisualPanel.class, "ValidationVisualPanel.editValidatorButton.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(addValidatorButton, org.openide.util.NbBundle.getMessage(ValidationVisualPanel.class, "ValidationVisualPanel.addValidatorButton.text")); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(enabledLabel)
                            .addComponent(fastForwardLabel))
                        .addGap(21, 21, 21)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(fastForwardCheckBox)
                            .addComponent(enabledCheckBox)))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 684, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(12, 12, 12)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(addValidatorButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(editValidatorButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(deleteValidatorButton, javax.swing.GroupLayout.DEFAULT_SIZE, 97, Short.MAX_VALUE))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(enabledLabel)
                    .addComponent(enabledCheckBox))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(fastForwardLabel)
                    .addComponent(fastForwardCheckBox))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 359, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(24, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(addValidatorButton, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(editValidatorButton, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(deleteValidatorButton, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(145, 145, 145))))
        );
    }// </editor-fold>//GEN-END:initComponents

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addValidatorButton;
    private javax.swing.JButton deleteValidatorButton;
    private javax.swing.JButton editValidatorButton;
    private javax.swing.JCheckBox enabledCheckBox;
    private javax.swing.JLabel enabledLabel;
    private javax.swing.JCheckBox fastForwardCheckBox;
    private javax.swing.JLabel fastForwardLabel;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable validatorsTable;
    private ValidatorsTableModel validatorsTableModel;
    // End of variables declaration//GEN-END:variables

    @Override
    public void propertyChange(PropertyChangeEvent evt) {
        if (evt.getPropertyName().equals(ValidationModel.PROPERTY_VALIDATORS)) {
            ValidationModel model = (ValidationModel) getModel();
            List<Validator> validatorsList = model.getValidation().getValidator();
            int targetIndex;

            if (evt.getNewValue() != null) {
                targetIndex = validatorsList.indexOf(evt.getNewValue());
                validatorsTableModel.insertRow(targetIndex, (Validator) evt.getNewValue());
            } else if (evt.getOldValue() != null) {
                targetIndex = validatorsList.indexOf(evt.getOldValue());
                validatorsTableModel.removeRow(targetIndex);
            } else {
                // error
            }
        }
    }
}
