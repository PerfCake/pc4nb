/*
 * Copyright 2015 Andrej Halaj.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package org.perfcake.pc4nb.ui.wizards.visuals;

import java.beans.PropertyChangeEvent;
import java.util.Properties;
import javax.swing.JTable;
import org.openide.util.Exceptions;
import org.perfcake.model.Scenario;
import org.perfcake.pc4nb.model.ModelMap;
import org.perfcake.pc4nb.model.PropertiesModel;

public final class ScenarioPropertiesVisualPanel extends VisualPanelWithProperties {

    public ScenarioPropertiesVisualPanel() {
        setModel(new PropertiesModel(new Scenario.Properties()));
        ModelMap.getDefault().addEntry(((PropertiesModel) getModel()).getProperties(), getModel());

        try {
            putToComponentPropertiesMap("Scenario", new Properties());
        } catch (ClassNotFoundException ex) {
            Exceptions.printStackTrace(ex);
        }

        initComponents();

        try {
            listProperties("Scenario");
        } catch (ClassNotFoundException | NoSuchFieldException ex) {
            System.err.println("Class not found " + ex.getMessage());

            initComponents();
        }
    }

    @Override
    public String getName() {
        return "Scenario Properties";
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        propertiesTable = new javax.swing.JTable();
        scenarioPropertiesLabel = new javax.swing.JLabel();

        propertiesTable.setModel(getPropertiesTableModel());
        jScrollPane1.setViewportView(propertiesTable);

        org.openide.awt.Mnemonics.setLocalizedText(scenarioPropertiesLabel, org.openide.util.NbBundle.getMessage(ScenarioPropertiesVisualPanel.class, "ScenarioPropertiesVisualPanel.scenarioPropertiesLabel.text")); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(45, 45, 45)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(scenarioPropertiesLabel)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 640, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(69, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(scenarioPropertiesLabel)
                .addGap(30, 30, 30)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 272, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(116, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable propertiesTable;
    private javax.swing.JLabel scenarioPropertiesLabel;
    // End of variables declaration//GEN-END:variables

    @Override
    public void propertyChange(PropertyChangeEvent evt) {
        try {
            listProperties("Scenario");
        } catch (ClassNotFoundException | NoSuchFieldException ex) {
            Exceptions.printStackTrace(ex);
        }
    }

    @Override
    public JTable getPropertiesTable() {
        return propertiesTable;
    }
}
